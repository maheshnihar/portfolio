{"version":3,"sources":["images/thor2.png","Context/ThemeContext.ts","Components/Common/customSwitchStyles.tsx","Components/Common/CustomSwitch.tsx","Components/Navigation/DesktopMenu.tsx","Components/Navigation/MobileMenuDrawer.tsx","Components/Navigation/MobileMenu.tsx","Components/Content/Summary.tsx","Components/Content/Experience.tsx","Components/Content/Projects.tsx","Components/Content/Skills.tsx","Components/Content/Contact.tsx","Components/Content/AboutMe.tsx","theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Theme","customSwitchStyles","switchBase","color","purple","backgroundColor","defaultThemeContext","theme","LIGHT","withStyles","createContext","props","classes","className","useState","isChecked","setCheck","Switch","checked","onChange","event","target","handler","DARK","DesktopMenu","currTheme","setCurrent","id","src","Logo","alt","to","themeHandler","MobileMenuDrawer","open","showDrawer","SetDrawer","CSSTransition","in","timeout","classNames","unmountOnExit","onEnter","onExited","onClick","closeDrawer","MobileMenu","visible","setDrawer","fontSize","Summary","Experience","style","fontWeight","Projects","Skills","Contact","AboutMe","IconButton","size","window","location","href","myTheme","lightTheme","createMuiTheme","palette","type","darkTheme","App","setTheme","th","console","log","exact","path","component","Boolean","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4caa3dfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thor2.e7beb677.png\";","import { createContext } from \"react\";\r\n\r\nexport enum Theme {\r\n    LIGHT = 'light',\r\n    DARK = 'dark'\r\n}\r\nexport interface IThemeContextProps {\r\n    theme: Theme,\r\n    toggleTheme?: (theme: Theme) => void\r\n}\r\n\r\nconst defaultThemeContext: IThemeContextProps = {\r\n    theme: Theme.LIGHT\r\n}\r\n\r\nconst ThemeContext = createContext<IThemeContextProps>(defaultThemeContext);\r\n\r\nexport default ThemeContext;\r\n","import { purple } from \"@material-ui/core/colors\";\r\n\r\nconst customSwitchStyles = {\r\n    switchBase: {\r\n        color: purple[300],\r\n        '&$checked': {\r\n            color: purple[500],\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: purple[500],\r\n        }\r\n    }\r\n}\r\n\r\nexport default customSwitchStyles;","import React, { useState, useContext } from 'react';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { withStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport customSwitchStyles from './customSwitchStyles';\r\nimport clsx from 'clsx';\r\nimport ThemeContext, { Theme } from '../../Context/ThemeContext';\r\n\r\n\r\ninterface ICustomSwitchProps {\r\n    classes?: any;\r\n    className?: any;\r\n    handler?: any;\r\n}\r\n\r\n\r\n\r\nconst CustomSwitch: React.FunctionComponent<ICustomSwitchProps> = (props) => {\r\n    const { classes, className } = props;\r\n    const [isChecked, setCheck] = useState(false);\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setCheck(event.target.checked);\r\n        props.handler(event.target.checked ? Theme.DARK : Theme.LIGHT);\r\n    }\r\n    return (\r\n        <Switch\r\n            checked={isChecked}\r\n            color='secondary'\r\n            className={classes.switchBase}\r\n            onChange={handleChange}\r\n        />\r\n    )\r\n};\r\n\r\nexport default withStyles(customSwitchStyles)(CustomSwitch);\r\n","import React, { useState } from 'react';\r\nimport './DesktopMenu.css';\r\nimport Logo from '../../images/thor2.png';\r\nimport { Link } from 'react-router-dom';\r\nimport CustomSwitch from '../Common/CustomSwitch';\r\nimport { Theme } from '../../Context/ThemeContext';\r\n\r\ninterface IDeskTopMenuProps {\r\n    themeHandler?: any\r\n}\r\n\r\nconst DesktopMenu: React.FunctionComponent<IDeskTopMenuProps> = (props) => {\r\n    const [currTheme, setCurrent] = useState(Theme.LIGHT);\r\n    const toggleHandler = (theme: Theme) => {\r\n        props.themeHandler(theme);\r\n        setCurrent(theme);\r\n    }\r\n    return (\r\n        <div id='leftmenu' className={`${currTheme === Theme.LIGHT ? 'leftmenu' : 'leftmenuDark'}`}>\r\n            <img src={Logo} alt=\"thor\" />\r\n            <Link to='/'>Summary</Link>\r\n            <Link to='/experience'>Experience</Link>\r\n            <Link to='/projects'>Projects</Link>\r\n            <Link to='/skills'>Skills</Link>\r\n            <Link to='/contact'>Contact</Link>\r\n            <CustomSwitch handler={toggleHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DesktopMenu;","import React, { useState } from 'react';\r\nimport './MobileMenuDrawer.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { Link } from 'react-router-dom';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\ninterface MobileMenuDrawerProps {\r\n    closeDrawer: any;\r\n    open: boolean;\r\n}\r\nconst MobileMenuDrawer: React.FunctionComponent<MobileMenuDrawerProps> = (props) => {\r\n    const [showDrawer, SetDrawer] = useState(props.open);\r\n    return (\r\n        <div>\r\n            {showDrawer &&\r\n                <CSSTransition\r\n                    in={showDrawer}\r\n                    timeout={300}\r\n                    classNames=\"alert\"\r\n                    unmountOnExit\r\n                    onEnter={() => SetDrawer(true)}\r\n                    onExited={() => SetDrawer(false)}\r\n                >\r\n                    <div id=\"mySidenav\" className=\"sidenav\">\r\n                        <CloseIcon className=\"closebtn\" onClick={props.closeDrawer} />\r\n                        {/* <a href=\"javascript:void(0)\" className=\"closebtn\" onClick={props.closeDrawer} >&times;</a> */}\r\n                        <Link to='/' onClick={props.closeDrawer}>Summary</Link>\r\n                        <Link to='/experience' onClick={props.closeDrawer}>Experience</Link>\r\n                        <Link to='/projects' onClick={props.closeDrawer}>Projects</Link>\r\n                        <Link to='/skills' onClick={props.closeDrawer}>Skills</Link>\r\n                        <Link to='/contact' onClick={props.closeDrawer}>Contact</Link>\r\n                    </div>\r\n                </CSSTransition>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileMenuDrawer;","import React, { useState } from 'react';\r\nimport './MobileMenu.css';\r\nimport Logo from '../../images/thor2.png';\r\n//import MenuIcon from '../images/hamburger.png';\r\nimport MobileMenuDrawer from './MobileMenuDrawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport CustomSwitch from '../Common/CustomSwitch';\r\nimport { Theme } from '../../Context/ThemeContext';\r\n\r\ninterface IMobileMenuProps {\r\n    themeHandler?: any\r\n}\r\nconst MobileMenu: React.FunctionComponent<IMobileMenuProps> = (props) => {\r\n    const toggleHandler = (theme: Theme) => {\r\n        props.themeHandler(theme);\r\n    }\r\n    const [visible, setDrawer] = useState(false)\r\n    return (\r\n        <div>\r\n            <div className=\"mobileHeader\">\r\n                <MenuIcon fontSize='large' onClick={() => setDrawer(true)} />\r\n                <div className=\"mobileHeaderLogo\">\r\n                    <img src={Logo} alt=\"thor\" />\r\n                </div>\r\n                <CustomSwitch handler={toggleHandler} />\r\n            </div>\r\n            {visible && <MobileMenuDrawer open={visible} closeDrawer={() => setDrawer(false)} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MobileMenu;","import * as React from 'react';\r\n\r\nexport interface ISummaryProps {\r\n}\r\n\r\nconst Summary: React.FunctionComponent<ISummaryProps> = (props) => {\r\n    return (\r\n        <div>\r\n            <span>Resourceful Software Developer with comprehensive experience in developing robust code for high-volume business.\r\n                Highly successful in automating various business process and reducing manual effort by 90%.\r\n                Take pride in nurturing productive relationships with co-workers, superiors and client by consistently delivering quality results.\r\n            </span>\r\n            <ul>\r\n                <li>Designing and developing, n - Tier Client/Server Web-based Applications using .NET Framework, SQL\r\nServer, WCF and RESTful services with Agile and Waterfall Development Methodology.</li>\r\n                <li>Excellent knowledge of ReactJS, JQuery, JavaScript, HTML, CSS, Bootstrap, XML, XSLT and XPATH.</li>\r\n                <li>Developed data layer using Entity Framework, ADO.Net and LINQ (LINQ to Object, LINQ to SQL, LINQ to\r\nXML, Lambda).</li>\r\n                <li>Strong experience in Performance Tuning and Query Optimization.</li>\r\n                <li>Highly experienced in developing Stored Procedures, Functions, Triggers, Views and Joins in SQL Server.</li>\r\n                <li>Solid understanding of Object oriented programming and design patterns including Dependency Injection\r\n(DI), Inversion of Control (IOC).</li>\r\n                <li>Experience of working in the complete SDLC involving design, development, documentation, testing and\r\nmaintenance.</li>\r\n                <li>Expertise with Source Code Control Systems GIT, Bit bucket and TFS (Team Foundation Server).</li>\r\n                <li>Extensively used Jira for project management and bug tracking.</li>\r\n                <li>Excellent analytical, problem solving, communication skills and an excellent team player.</li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Summary;","import * as React from 'react';\r\n\r\nexport interface IExperienceProps {\r\n}\r\n\r\nconst Experience: React.FunctionComponent<IExperienceProps> = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <p style={{ fontWeight: 'bold' }}>Application Software Developer</p>\r\n                <span>Code Ace Solutions Inc, South Plainfield NJ (January 2015 – Present)</span>\r\n                <ul>\r\n                    <li>Highly successful in improving the overall operational efficiency of business process by implementing\r\nvarious performance related tweaks.</li>\r\n                    <li>Successful in improving the large data processing applications runtime from weeks to couple of days.</li>\r\n                    <li>Lead the team in successfully automating business process to reduce manual intervention.</li>\r\n                    <li>Effectively utilized modern web frameworks to implement rich UI for business to monitor their day to day\r\nprocesses.</li>\r\n                    <li>Automated various health care processes resulting in reduction of manual effort by 95%.</li>\r\n                    <li>Championed the successful implementation of medical letter automation using C#, ASP.NET and SQL\r\nserver for 13 states (line of business) in US.</li>\r\n                    <li>Developed rich frontend UI for business users to process medical claims, denials, approvals and\r\ncomplaints.</li>\r\n                    <li>Built efficient security model on web applications to protect PHI data.</li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <p style={{ fontWeight: 'bold' }}>.NET Developer</p>\r\n                <span>Tech Mahindra, Hyderabad India (May 2011 – July 2013)</span>\r\n                <ul>\r\n                    <li>Successful in coding complex workflows for General Electric gas and Oil project using .NET framework and\r\nSQL server database.</li>\r\n                    <li>Designed and coded a website in ASP.NET MVC for a school administration to streamline admission and\r\nenrollment process.</li>\r\n                    <li>Developed a C# ASP.NET Web application for local travel agency to manage bus bookings.</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Experience;","import * as React from 'react';\r\n\r\nexport interface IProjectsProps {\r\n}\r\n\r\nconst Projects: React.FunctionComponent<IProjectsProps> = (props) => {\r\n    return (\r\n        <div>\r\n            Projects goes here!\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Projects;","import * as React from 'react';\r\nimport './Skills.css';\r\nexport interface ISkillsProps {\r\n}\r\n\r\nconst Skills: React.FunctionComponent<ISkillsProps> = (props) => {\r\n    return (\r\n        <div className='parent'>\r\n            <div>\r\n                <p>Programming Languages</p>\r\n                <span>C#, C++</span>\r\n            </div>\r\n            <div>\r\n                <p>.NET Technologies</p>\r\n                <span>ASP.NET, ASP.NET MVC, WebAPI, WCF, Entity Framework,LINQ, ADO.NET</span>\r\n            </div>\r\n            <div>\r\n                <p>Web Technologies</p>\r\n                <span>React JS, JavaScript, HTML, CSS,XML, JSON, XSLT, AJAX, JQuery,Bootstrap</span>\r\n            </div>\r\n            <div>\r\n                <p>Database</p>\r\n                <span>SQL Server 2005/2008/2014,PostgreSQL</span>\r\n            </div>\r\n            <div>\r\n                <p>ETL</p>\r\n                <span>SSIS, SAP businesswarehouse</span>\r\n            </div>\r\n            <div>\r\n                <p>Unit Testing frameworks</p>\r\n                <span>NUNIT, MSTEST</span>\r\n            </div>\r\n            <div>\r\n                <p>Development IDE</p>\r\n                <span>Visual Studio, Visual Code, SQL Management Studio</span>\r\n            </div>\r\n            <div>\r\n                <p>Source Control</p>\r\n                <span>GitHub, BitBucket, TFS</span>\r\n            </div>\r\n            <div>\r\n                <p>Design Software</p>\r\n                <span>Photoshop, Dreamweaver</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Skills;","import * as React from 'react';\r\n\r\nexport interface IContactProps {\r\n}\r\n\r\nconst Contact: React.FunctionComponent<IContactProps> = (props) => {\r\n    return (\r\n        <div>\r\n            Contact goes here!\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contact;","import * as React from 'react';\r\nimport './AboutMe.css';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nexport interface IAboutMeProps {\r\n}\r\n\r\nconst AboutMe: React.FunctionComponent<IAboutMeProps> = (props) => {\r\n    return (\r\n        <div className='aboutme'>\r\n            <p>Mahesh Palem</p>\r\n            <div>\r\n                <IconButton size='small' onClick={() => { window.location.href = \"tel: 123-456-7890\" }}>\r\n                    <CallIcon />\r\n                </IconButton>\r\n                <span>(216)496-3321</span>\r\n            </div>\r\n            <div className='social'>\r\n                <IconButton><GitHubIcon /></IconButton>\r\n                <IconButton><LinkedInIcon /></IconButton>\r\n                <IconButton><InstagramIcon /></IconButton>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default AboutMe;","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nconst lightTheme = createMuiTheme({\r\n    palette: {\r\n        type: 'light',\r\n    }\r\n});\r\nconst darkTheme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n});\r\n\r\nexport const myTheme = {\r\n    lightTheme,\r\n    darkTheme\r\n}","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport './App.css';\nimport DesktopMenu from './Components/Navigation/DesktopMenu';\nimport MobileMenu from './Components/Navigation/MobileMenu';\nimport Summary from './Components/Content/Summary';\nimport Experience from './Components/Content/Experience';\nimport Projects from './Components/Content/Projects';\nimport Skills from './Components/Content/Skills';\nimport Contact from './Components/Content/Contact';\nimport AboutMe from './Components/Content/AboutMe';\nimport { MuiThemeProvider } from '@material-ui/core';\nimport { myTheme } from './theme';\nimport { Theme } from \"./Context/ThemeContext\";\n\ninterface IAppProps {\n  classes?: any;\n  className?: any;\n}\n\nconst App: React.FunctionComponent<IAppProps> = (props) => {\n  const [currTheme, setTheme] = useState(Theme.LIGHT);\n  const theme = (currTheme === Theme.DARK ? myTheme.darkTheme : myTheme.lightTheme);\n  const themeHandler = (th: Theme) => {\n    console.log('APP THEME....', th);\n    setTheme(th);\n  }\n  return (\n    <MuiThemeProvider theme={theme}>\n      <div className=\"App\">\n        <DesktopMenu themeHandler={themeHandler} />\n        <MobileMenu themeHandler={themeHandler} />\n        <div className={`${currTheme === Theme.LIGHT ? 'content' : 'contentDark'}`}>\n          <AboutMe />\n          <Switch>\n            <Route exact path=\"/\" component={Summary} />\n            <Route path=\"/experience\" component={Experience} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/skills\" component={Skills} />\n            <Route path=\"/contact\" component={Contact} />\n          </Switch>\n        </div>\n      </div>\n    </MuiThemeProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ThemeProvider from './Context/ThemeProvider';\n\nReactDOM.render(\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\n        <App />\n    </BrowserRouter>, document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}